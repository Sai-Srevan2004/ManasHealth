# -*- coding: utf-8 -*-
"""depression user

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uhduj7XC4NhNTIHaJrLi4k85X7seaQjd
"""

# import pandas as pd
# import numpy as np
# import warnings
# from sklearn.ensemble import GradientBoostingClassifier

# df = pd.read_csv("/content/depression .csv")
# df.info()

# my_dict = {0 :'How often do you find it difficult to experience joy or interest in activities that you used to enjoy?\n0--Never\n1--Sometimes\n2--Often\n3--Always',
#            1 :'Do you often feel a persistent sense of sadness or emptiness?\n0--Never\n1--Sometimes\n2--Often\n3--Always',
#            2 :'How frequently do you experience changes in appetite, either eating significantly more or less than usual?\n0--Never\n1--Sometimes\n2--Often\n3--Always',
#            3 : 'Do you find yourself having trouble falling asleep, staying asleep, or experiencing changes in your sleep patterns?\n0--Never\n1--Sometimes\n2--Often\n3--Always',
#            4 : "On a regular basis, how often do you feel fatigued or lacking in energy, even when you've had enough rest?\n0--Never\n1--Sometimes\n2--Often\n3--Always",
#            5 : 'How often do you have negative thoughts about yourself, feeling worthless or undeserving?\n0--Never\n1--Sometimes\n2--Often\n3--Always',
#            6 : 'In your day-to-day life, how often do you find it difficult to concentrate or make decisions?\n0--Never\n1--Sometimes\n2--Often\n3--Always'}

# X = df.drop('D_severity', axis=1)
# y = df['D_severity']

# gb_classifier = GradientBoostingClassifier(learning_rate = 0.01, max_depth = 3, n_estimators = 50)
# gb_classifier.fit(X, y)

# user_input = []
# for x in my_dict:
#   print(my_dict[x])
#   temp = int(input())
#   user_input.append(temp)

# add_val = sum(user_input)
# user_input.append(add_val)
# user_input.append(add_val*2)

# user_input = np.array([user_input[:9]])
# user_df = pd.DataFrame(user_input)


# predicted_gb = gb_classifier.predictd(user_df)

# print(f"The predicted result is: {predicted_gb[0]}")
# warnings.filterwarnings('ignore',  message="X does not have valid feature names,*")

import pandas as pd
import numpy as np
from sklearn.ensemble import GradientBoostingClassifier

# Load the dataset
df = pd.read_csv('Depression.csv')

# Model training
X = df.drop('D_severity', axis=1)
y = df['D_severity']

gb_classifier = GradientBoostingClassifier(learning_rate=0.01, max_depth=3, n_estimators=50)
gb_classifier.fit(X, y)

# Function to get questions with options
def get_questionsd():
    my_dictd = {'a': 'How often do you find it difficult to experience joy or interest in activities that you used to enjoy?',
               'b': 'Do you often feel a persistent sense of sadness or emptiness?',
               'c': 'How frequently do you experience changes in appetite, either eating significantly more or less than usual?',
               'd': 'Do you find yourself having trouble falling asleep, staying asleep, or experiencing changes in your sleep patterns?',
               'e': "On a regular basis, how often do you feel fatigued or lacking in energy, even when you've had enough rest?",
               'f': 'How often do you have negative thoughts about yourself, feeling worthless or undeserving?',
               'g': 'In your day-to-day life, how often do you find it difficult to concentrate or make decisions?',
               'aa': {'0': 'Never', '1': 'Sometimes', '2': 'Often', '3': 'Always'}
               }

    return {'questionsd': my_dictd}

# Function to make predictions
def predictd(user_responsesd):
    add_val = sum(user_responsesd)
    user_responsesd.append(add_val)
    user_responsesd.append(add_val * 2)

    user_input = np.array([user_responsesd])  # Adjust the index based on the number of questions
    user_df = pd.DataFrame(user_input)

    predicted_gb = gb_classifier.predict(user_df)

    return {'result': str(predicted_gb[0])}
