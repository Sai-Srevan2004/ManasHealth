# # -*- coding: utf-8 -*-
# """Stress_user.ipynb

# Automatically generated by Colaboratory.

# Original file is located at
#     https://colab.research.google.com/drive/1dOVSEoerGAsM3k7CqMermSH6cEeCfG0e

# IMPORTING LIBRARIES
# """

# import pandas as pd
# import numpy as np
# import warnings
# from sklearn.ensemble import GradientBoostingClassifier



# df = pd.read_csv("Stress.csv")
# df.info()

# my_dict = {0 :'How often do you find it difficult to unwind and relax after a long day?\n0--Never\n1--Sometimes\n2--Often\n3--Always',
#            1 :'Do you experience difficulty sleeping due to racing thoughts or worries?\n0--Never\n1--Sometimes\n2--Often\n3--Always',
#            2 :'How frequently do you notice physical symptoms of stress, such as headaches, muscle tension, or stomachaches?\n0--Never\n1--Sometimes\n2--Often\n3--Always',
#            3 : 'In your daily life, how often do you feel overwhelmed by tasks or responsibilities?\n0--Never\n1--Sometimes\n2--Often\n3--Always',
#            4 : 'Do you find it challenging to concentrate or focus on tasks when under pressure?\n0--Never\n1--Sometimes\n2--Often\n3--Always',
#            5 : 'How often do you experience irritability or mood swings?\n0--Never\n1--Sometimes\n2--Often\n3--Always',
#            6 : 'On a regular basis, how frequently do you engage in activities that bring you a sense of calm or relaxation?\n0--Never\n1--Sometimes\n2--Often\n3--Always'}

# """MODEL TRAINING"""

# X = df.drop('S_severity', axis=1)
# y = df['S_severity']

# gb_classifier = GradientBoostingClassifier(learning_rate = 0.01, max_depth = 3, n_estimators = 50)
# gb_classifier.fit(X, y)

# """MODEL TESTING"""

# user_input = []
# for x in my_dict:
#   print(my_dict[x])
#   temp = int(input())
#   user_input.append(temp)

# add_val = sum(user_input)
# user_input.append(add_val)
# user_input.append(add_val*2)

# user_input = np.array([user_input])
# user_df = pd.DataFrame(user_input)

# predicted_gb = gb_classifier.predict(user_df)

# print(f"The predicted result is: {predicted_gb[0]}")
# warnings.filterwarnings('ignore',  message="X does not have valid feature names,*")

# ml_code.ipynb (Colab notebook)

import pandas as pd
import numpy as np
from sklearn.ensemble import GradientBoostingClassifier
# Load the dataset
df = pd.read_csv("Stress.csv")

# Model training
X = df.drop('S_severity', axis=1)
y = df['S_severity']

gb_classifier = GradientBoostingClassifier(learning_rate=0.01, max_depth=3, n_estimators=50)
gb_classifier.fit(X, y)

# Function to get questions with options
def get_questions():
    my_dict = {'a' :'How often do you find it difficult to unwind and relax after a long day?',
           'b' :'Do you experience difficulty sleeping due to racing thoughts or worries?',
           'c' :'How frequently do you notice physical symptoms of stress, such as headaches, muscle tension, or stomachaches?',
           'd' : 'In your daily life, how often do you feel overwhelmed by tasks or responsibilities?',
           'e' : 'Do you find it challenging to concentrate or focus on tasks when under pressure?',
           'f' : 'How often do you experience irritability or mood swings?',
           'g' : 'On a regular basis, how frequently do you engage in activities that bring you a sense of calm or relaxation?',
           'aa':{'0':'Never','1':'Sometimes','2':'Often','3':'Always'}
           }

    return {'questions': my_dict}

# Function to make predictions
def predict(user_responses):
    add_val = sum(user_responses)
    user_responses.append(add_val)
    user_responses.append(add_val * 2)

    user_input = np.array([user_responses])
    user_df = pd.DataFrame(user_input)

    predicted_gb = gb_classifier.predict(user_df)

    return {'result': str(predicted_gb[0])}

